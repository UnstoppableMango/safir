# Job template - https://github.com/dotnet/core-sdk/blob/master/eng/common/templates/job/job.yml

parameters:
# Job schema parameters - https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=schema#job
  cancelTimeoutInMinutes: ''

  condition: ''

  continueOnError: false

  container: ''

  dependsOn: ''

  displayName: ''

  steps: []

  pool: ''

  strategy: ''

  timeoutInMinutes: ''

  variables: []

  workspace: ''

# Job base template specific parameters
  # Required: name of the job
  name: ''

  # Optional: Include PublishBuildArtifacts task
  enablePublishBuildArtifacts: false

  # Optional: Enable publishing to the build asset registry
  enablePublishBuildAssets: false

  # Optional: Include PublishTestResults task
  enablePublishTestResults: false

jobs:
- job: ${{ parameters.name }}

  ${{ if ne(parameters.cancelTimeoutInMinutes, '') }}:
    cancelTimeoutInMinutes: ${{ parameters.cancelTimeoutInMinutes }}

  ${{ if ne(parameters.condition, '') }}:
    condition: ${{ parameters.condition }}

  ${{ if ne(parameters.container, '') }}:
    container: ${{ parameters.container }}

  ${{ if ne(parameters.continueOnError, '') }}:
    continueOnError: ${{ parameters.continueOnError }}

  ${{ if ne(parameters.dependsOn, '') }}:
    dependsOn: ${{ parameters.dependsOn }}

  ${{ if ne(parameters.displayName, '') }}:
    displayName: ${{ parameters.displayName }}

  ${{ if ne(parameters.pool, '') }}:
    pool: ${{ parameters.pool }}

  ${{ if ne(parameters.strategy, '') }}:
    strategy: ${{ parameters.strategy }}

  ${{ if ne(parameters.timeoutInMinutes, '') }}:
    timeoutInMinutes: ${{ parameters.timeoutInMinutes }}

  variables:
  - ${{ each variable in parameters.variables }}:
    # handle name-value variable syntax
    # example:
    # - name: [key]
    #   value: [value]
    - ${{ if ne(variable.name, '') }}:
      - name: ${{ variable.name }}
        value: ${{ variable.value }}
    
    # handle variable groups
    - ${{ if ne(variable.group, '') }}:
      - group: ${{ variable.group }}

    # handle key-value variable syntax.
    # example:
    # - [key]: [value]
    - ${{ if and(eq(variable.name, ''), eq(variable.group, '')) }}:
      - ${{ each pair in variable }}:
        - name: ${{ pair.key }}
          value: ${{ pair.value }}

  ${{ if ne(parameters.workspace, '') }}:
    workspace: ${{ parameters.workspace }}

  steps:
  - ${{ each step in parameters.steps }}:
    - ${{ step }}

  - ${{ if eq(parameters.enablePublishBuildArtifacts, 'true') }}:
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)'
        PublishLocation: Container
        ArtifactName: $(Agent.Os)_$(Agent.JobName)
      continueOnError: true
      condition: always()

  - ${{ if eq(parameters.enablePublishTestResults, 'true') }}:
    - task: PublishTestResults@2
      displayName: Publish Test Results
      inputs:
        testResultsFormat: 'xUnit'
        testResultsFiles: '*.xml' 
        searchFolder: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_BuildConfig)'
      continueOnError: true
      condition: always()
    
  - ${{ if and(eq(parameters.enablePublishBuildAssets, true), ne(variables['_PublishUsingPipelines'], 'true'), notin(variables['Build.Reason'], 'PullRequest')) }}:
    - task: CopyFiles@2
      displayName: Gather Asset Manifests
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/artifacts/log/$(_BuildConfig)/AssetManifest'
        TargetFolder: '$(Build.StagingDirectory)/AssetManifests'
      continueOnError: ${{ parameters.continueOnError }}
      condition: and(succeeded(), eq(variables['_DotNetPublishToBlobFeed'], 'true'))
    - task: PublishBuildArtifacts@1
      displayName: Push Asset Manifests
      inputs:
        PathtoPublish: '$(Build.StagingDirectory)/AssetManifests'
        PublishLocation: Container
        ArtifactName: AssetManifests
      continueOnError: ${{ parameters.continueOnError }}
      condition: and(succeeded(), eq(variables['_DotNetPublishToBlobFeed'], 'true'))
