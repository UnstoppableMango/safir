<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Safir.ControlLibrary.Controls"
                    xmlns:v="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                    xmlns:b="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                    xmlns:m="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/Thumb.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type c:SafirWindow}">
        <Grid LayoutTransform="{Binding LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}"
              RenderTransform="{Binding RenderTransform, RelativeSource={RelativeSource TemplatedParent}}">
            <AdornerDecorator>
                <Grid Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                        <!-- Icon -->
                        <ColumnDefinition Width="auto" />
                        <!-- Left Window Commands -->
                        <ColumnDefinition Width="auto" />
                        <!-- Title -->
                        <ColumnDefinition Width="*" />
                        <!-- Right Window Commands -->
                        <ColumnDefinition Width="auto" />
                        <!-- Window Control Butons -->
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Rectangle x:Name="PART_WindowTitleBackground"
                               Grid.Column="0"
                               Grid.ColumnSpan="5"
                               Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Fill="{TemplateBinding WindowTitleBrush}"
                               Focusable="False"
                               StrokeThickness="0"
                               UseLayoutRounding="True"
                               Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <ContentControl x:Name="PART_Icon"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    MinWidth="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Panel.ZIndex="1"
                                    Content="{TemplateBinding Icon}"
                                    ContentTemplate="{TemplateBinding IconTemplate}"
                                    Focusable="False"
                                    Visibility="{TemplateBinding ShowIconOnTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <m:MetroThumb x:Name="PART_WindowTitleThumb"
                                  Grid.Row="0"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="5"
                                  Style="{StaticResource WindowTitleThumbStyle}" />

                    <m:MetroThumbContentControl x:Name="PART_TitleBar"
                                                Grid.Row="0"
                                                Grid.Column="2"
                                                Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                HorizontalAlignment="{TemplateBinding TitleAlignment}"
                                                HorizontalContentAlignment="Stretch"
                                                VerticalContentAlignment="Stretch"
                                                Content="{TemplateBinding Title}"
                                                ContentTemplate="{TemplateBinding TitleTemplate}"
                                                Focusable="False"
                                                Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ContentControl.Foreground>
                            <MultiBinding Converter="{x:Static v:BackgroundToForegroundConverter.Instance}">
                                <Binding ElementName="PART_WindowTitleBackground"
                                         Mode="OneWay"
                                         Path="Fill" />
                                <Binding Mode="OneWay"
                                         Path="TitleForeground"
                                         RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </ContentControl.Foreground>
                    </m:MetroThumbContentControl>

                    <ContentPresenter x:Name="PART_WindowControlButtons"
                                      Grid.Row="0"
                                      Grid.RowSpan="2"
                                      Grid.Column="4"
                                      Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      VerticalAlignment="Top"
                                      Panel.ZIndex="1"
                                      Content="{Binding WindowControlButtons, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Focusable="False"
                                      UseLayoutRounding="True" />

                    <ContentControl x:Name="PART_Content"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="5"
                                    FocusVisualStyle="{x:Null}"
                                    IsTabStop="False"
                                    UseLayoutRounding="True">
                        <ContentPresenter />
                    </ContentControl>
                </Grid>
            </AdornerDecorator>
            <Border x:Name="PART_Border"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="{x:Null}"
                    BorderBrush="{DynamicResource WindowBorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Opacity="0.5"
                    UseLayoutRounding="True" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="UseNoneWindowStyle" Value="True">
                <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
            </Trigger>
            <Trigger Property="ShowTitleBar" Value="False">
                <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
            </Trigger>
            <Trigger Property="IsActive" Value="False">
                <Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter TargetName="PART_Border" Property="BorderThickness" Value="0" />
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <Setter TargetName="PART_Border" Property="Effect">
                    <Setter.Value>
                        <!--TODO: Make this actually work-->
                        <DropShadowEffect BlurRadius="4"
                                          Direction="315"
                                          Opacity="0.3"
                                          ShadowDepth="2"
                                          Color="{DynamicResource ShadowColor}" />
                    </Setter.Value>
                </Setter></Trigger>
            <!--  no icon and no icon content template -> collapse the icon content control  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon" Value="{x:Null}" />
                    <Condition Property="IconTemplate" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Icon" Property="MinWidth" Value="0" />
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="OldTemplate" TargetType="{x:Type c:SafirWindow}">
        <Border x:Name="WindowBorder" Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}"
                Background="{DynamicResource WindowBackgroundColorBrush}">
            <Grid>
                <Border BorderThickness="1">
                    <AdornerDecorator>
                        <Grid x:Name="LayoutRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" MinHeight="25" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="15" />
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="1" Grid.RowSpan="2" Margin="7" />
                            <Rectangle x:Name="HeaderBackground"
                                       Grid.Row="0"
                                       Height="{Binding TitleBar.Height}"
                                       VerticalAlignment="Top"
                                       Fill="{DynamicResource WindowBackgroundColorBrush}" />

                            <!--<ContentControl Grid.Row="0" HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Content="{TemplateBinding TitleBar}"/>-->

                            <ContentPresenter x:Name="PART_WindowControlButtons"
                                              Grid.Row="0"
                                              VerticalAlignment="Top"
                                              Panel.ZIndex="1"
                                              Content="{Binding WindowControlButtons, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                              Focusable="False"
                                              UseLayoutRounding="True" />

                            <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True" Grid.Row="0">
                                            <Button x:Name="Minimize" ToolTip="Minimize" Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}">
                                                <Grid Width="30" Height="25" RenderTransform="1,0,0,1,0,1">
                                                    <Path Data="M0,6 L8,6 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                          Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
                                                </Grid>
                                            </Button>
                                            <Grid Margin="1,0,1,0">
                                                <Button x:Name="Restore">
                                                    <Grid Width="30" Height="25" UseLayoutRounding="True" RenderTransform="1,0,0,1,.5,.5">
                                                        <Path Data="M2,0 L8,0 L8,6 M0,3 L6,3 M0,2 L6,2 L6,8 L0,8 Z" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                              Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1"  />
                                                    </Grid>
                                                </Button>
                                                <Button x:Name="Maximize">
                                                    <Grid Width="31" Height="25">
                                                        <Path Data="M0,1 L9,1 L9,8 L0,8 Z" Width="9" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                              Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
                                                    </Grid>
                                                </Button>
                                            </Grid>
                                            <Button x:Name="Close">
                                                <Grid Width="30" Height="25" RenderTransform="1,0,0,1,0,1">
                                                    <Path Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                          Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1.5"  />
                                                </Grid>
                                            </Button>
                                        </StackPanel>-->
                            <TextBlock x:Name="WindowTitleTextBlock" Grid.Row="0" Text="{TemplateBinding Title}" TextTrimming="CharacterEllipsis" Margin="8 -1 0 0" FontSize="16" Foreground="{TemplateBinding Foreground}"
                                       HorizontalAlignment="Left" VerticalAlignment="Top" />
                        </Grid>
                    </AdornerDecorator>
                </Border>
                <Border BorderBrush="{DynamicResource BlueColorBrush}" BorderThickness="1"
                        Visibility="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
        </Border>
        <!--<ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="7" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
    </ControlTemplate>

    <Style TargetType="{x:Type c:SafirWindow}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundColorBrush}" />
        <Setter Property="b:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <b:StylizedBehaviorCollection>
                    <b:BorderlessWindowBehavior />
                </b:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="TextElement.FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="WindowTitleBrush" Value="{DynamicResource WindowTitleColorBrush}" />
        <Setter Property="TitleForeground" Value="{DynamicResource ForegroundColorBrush}" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Margin="8 -1 0 0"
                               VerticalAlignment="Center"
                               FontFamily="{DynamicResource HeaderFontFamily}"
                               FontSize="{DynamicResource WindowTitleFontSize}"
                               Text="{TemplateBinding Content}"
                               TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Template" Value="{StaticResource WindowTemplate}" />
        <Style.Triggers>
            <!-- Not sure why this needs to be a trigger and not a default value... Consider changing in the future. TODO: Re-visit -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Icon, Mode=OneWay, Converter={x:Static v:IsNullConverter.Instance}}" Value="False">
                <Setter Property="IconTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <m:MultiFrameImage Width="{TemplateBinding Width}"
                                               Height="{TemplateBinding Height}"
                                               MultiFrameImageMode="{Binding IconScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type c:SafirWindow}}}"
                                               RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type c:SafirWindow}}}"
                                               RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type c:SafirWindow}}}"
                                               Source="{TemplateBinding Content}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <Trigger Property="TitleAlignment" Value="Center">
                <!-- Not sure what is different about the two templates yet. So, commented out -->
                <!--<Setter Property="Template" Value="{StaticResource CenterWindowTemplateKey}" />-->
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
