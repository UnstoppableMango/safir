<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:v="clr-namespace:Safir.Views">

    <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type v:DefaultWindow}">
        <Border x:Name="WindowBorder" Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}" Background="{StaticResource WindowBackgroundColorBrush}">
            <Grid>
                <Border BorderThickness="1">
                    <AdornerDecorator>
                        <Grid x:Name="LayoutRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" MinHeight="25"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="15"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="1" Grid.RowSpan="2" Margin="7"/>
                            <Rectangle x:Name="HeaderBackground" Height="25" Fill="{DynamicResource WindowBackgroundColorBrush}" VerticalAlignment="Top" Grid.Row="0"/>
                            <ContentControl Grid.Row="0"
                                            Content="{Binding TitleBar, RelativeSource={RelativeSource TemplatedParent}}"
                                            HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True" Grid.Row="0">
                                <Button x:Name="Minimize" Template="{StaticResource MinimizeButton}"
                                        Visibility="{Binding MinimizeButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <Grid Margin="1,0,1,0">
                                    <Button x:Name="Restore" Template="{StaticResource RestoreDownButton}"
                                        Visibility="{Binding RestoreDownButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <Button x:Name="Maximize" Template="{StaticResource MaximizeButton}"
                                        Visibility="{Binding MaximizeButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </Grid>
                                <Button x:Name="Close" Template="{StaticResource CloseButton}"
                                        Visibility="{Binding CloseButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            </StackPanel>
                            <TextBlock x:Name="WindowTitleTextBlock" Grid.Row="0" Text="{TemplateBinding Title}" TextTrimming="CharacterEllipsis" Margin="8 -1 0 0"  FontSize="16"  Foreground="{TemplateBinding Foreground}"
                                       HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <!--<Grid Grid.Row="2">
                                <Path x:Name="ResizeGrip" Visibility="Collapsed" Width="12" Height="12" Margin="1" HorizontalAlignment="Right"
                                        Stroke="{StaticResource BlueColorBrush}" StrokeThickness="1" Stretch="None" Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3" />
                            </Grid>-->
                        </Grid>
                    </AdornerDecorator>
                </Border>
                <Border BorderBrush="{StaticResource BlueColorBrush}" BorderThickness="1" Visibility="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
                <Setter TargetName="LayoutRoot" Property="Margin" Value="7" />
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="WindowStyle" TargetType="{x:Type v:DefaultWindow}">

        <Style.Resources>
            <Style TargetType="{x:Type Menu}" BasedOn="{StaticResource MenuStyle}"/>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}"/>
            <Style TargetType="{x:Type StatusBar}" BasedOn="{StaticResource StatusBarStyle}"/>
        </Style.Resources>

        <Setter Property="WindowStyle" Value="None"/>
        <!--<Setter Property="AllowsTransparency" Value="True"/>-->
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundColorBrush}"/>
        <!--<Setter Property="ResizeMode" Value="CanResizeWithGrip" />-->
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Template" Value="{StaticResource WindowTemplate}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>